name: Build Docker Hub

on:
  schedule:
    - cron: "0 */24 * * *"
  push:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.6"
      - name: Check dependencies cache
        uses: actions/cache@v2
        env:
          cache-name: cache-pip-modules
        with:
          path: .cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Code quality with black
        uses: areed145/black-action@v1.0.2
        with:
          args: ". --check --line-length 79"
      - name: Lint with flake8
        run: |
          pip install flake8
      - name: Test with pytest
        run: |
          pip install pytest
          pip install pytest-cov
          pytest --cov=./ --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
      - name: Build and push image to Docker Hub
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ github.repository }}
          tags: latest
      - name: Set up kubectl
        uses: matootie/dokube@v1.3.2
        with:
          personalAccessToken: ${{ secrets.DIGITALOCEAN_TOKEN }}
          clusterName: k8s-1-16-2-do-3-sfo2-1580268289343
      - name: Apply new image
        run: kubectl replace -f kube.yml --force
